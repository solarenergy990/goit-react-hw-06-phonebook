{"version":3,"sources":["components/ContactsList/ContactsLIst.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","components/App/App.js","index.js","components/ContactsList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","evt","value","target","currentTarget","reset","className","preventDefault","s","label","labelText","type","pattern","title","required","onChange","input","button","ContactListItem","contactName","contactNumber","onClickRemove","listItem","listText","onClick","ContactsList","contacts","onContactDelete","children","map","contact","id","Filter","defaultProps","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","initialContacts","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","data","shortid","generate","alert","prevContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53d9b613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsLIst_contacts__3BCU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__27LpJ\",\"labelText\":\"ContactForm_labelText__2mOUZ\",\"input\":\"ContactForm_input__mXrtS\",\"button\":\"ContactForm_button__KdG7N\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n\n    if (evt.currentTarget.name === 'name') {\n      setName(value);\n    }\n    if (evt.currentTarget.name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-container\">\n          <label className={s.label}>\n            <p className={s.labelText}>Name</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={handleChange}\n              value={name}\n              className={s.input}\n            />\n          </label>\n          <label className={s.label}>\n            <p className={s.labelText}>Number</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={handleChange}\n              value={number}\n              className={s.input}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contactName, contactNumber, onClickRemove }) => {\n  return (\n    <li className={s.listItem}>\n      <p className={s.listText}>\n        {contactName} : {contactNumber}\n      </p>\n      <button type=\"button\" className={s.button} onClick={onClickRemove}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactsList/ContactListItem/ContactListItem';\nimport s from './ContactsLIst.module.css';\n\nconst ContactsList = ({ contacts, onContactDelete, children }) => {\n  return (\n    <div className={s.contacts}>\n      {children}\n      <ul>\n        {contacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <ContactListItem\n              key={id}\n              contactName={name}\n              contactNumber={number}\n              onClickRemove={() => onContactDelete(id)}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onContactDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <p className={s.label}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key) ?? defaultValue);\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import React, { useState } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport initialContacts from '../../contacts.json';\nimport shortid from 'shortid';\n\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage('contacts', initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const addContact = data => {\n    const { name, number } = data;\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const checkedContactNames = contacts.map(contact => {\n      return contact.name.toLowerCase();\n    });\n\n    if (!checkedContactNames.includes(name.toLowerCase())) {\n      setContacts(prevContacts => {\n        return [...prevContacts, contact];\n      });\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = evt => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={visibleContacts}\n        onContactDelete={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1ox0a\",\"listText\":\"ContactListItem_listText__17ifg\",\"button\":\"ContactListItem_button__2oLKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__xF42X\",\"input\":\"Filter_input__2p85s\"};"],"sourceRoot":""}